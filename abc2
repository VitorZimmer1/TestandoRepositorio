	package Utils;

	import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import org.openqa.selenium.TakesScreenshot;
	import org.openqa.selenium.By;
	import org.openqa.selenium.OutputType;
	import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

	public class Funcoes {

		

		public boolean encontraObjeto(WebDriver driver, String xpath, int limite)	throws InterruptedException {	
			
			for (int i = 0; i <= 10; i++)	{
				try {
					
					boolean retornoElemento = driver.findElement(By.xpath(xpath)).isDisplayed();
					
					if	(retornoElemento == false)	throw new Exception();
					
					 else {
						break;
					}
						
					
				} catch (Exception e) {
					
				
				}
			}
			
			return true;
		}
		
	
		
		
		public String retornaText(WebDriver driver, String xpath) {
			
			String msg = driver.findElement(By.xpath(xpath)).getText();
			return msg;
			
		}
		
		
		public boolean comparaTexto(String resultadoEsperado, String resultadoObtido)	{
			
			if(resultadoEsperado.equals(resultadoObtido))	{
				return true;
				
			}else 	{
				return false;
			}
		}
		
		
		public void tiraPrint(WebDriver driver, String Path) throws IOException {	
			
	        File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
	        com.google.common.io.Files.copy(scrFile, new File(Path + ".png"));
	        
	    }
				
		//Retorna a data atual
        public String retornaData() {

            DateTimeFormatter d =DateTimeFormatter.ofPattern("dd/MM/yyy");
            LocalDate a =  LocalDate.now();
            String data = a.format(d);
            return data;
        }

        public Document CriaPdf(String PathPDF) throws FileNotFoundException, DocumentException {
             Document document = new Document();
             PdfWriter.getInstance(document, new FileOutputStream(PathPDF));
             document.open();
             return document;
        }


        public void insereTituloNoPDF(Document document, String Título) throws DocumentException {
            document.add(new Paragraph(Título,FontFactory.getFont(FontFactory.COURIER_BOLD, 15,BaseColor.BLUE)));

        }

        public void insereSubTituloPDF(Document document, String Título) throws DocumentException {
            document.add(new Paragraph(Título,FontFactory.getFont(FontFactory.COURIER, 7,BaseColor.BLACK)));

        }
//---------------------------------------------------------------------------------------------------
        public void insereTextoPDF(Document document, String Texto) throws DocumentException {
            document.add(new Paragraph(Texto,FontFactory.getFont(FontFactory.COURIER, 10,BaseColor.DARK_GRAY)));
        }
    //---------------------------------------------------------------------------------------------------
        public void insereTextoPDFSteps(Document document, String txt) throws DocumentException {
            document.add(new Paragraph(txt,FontFactory.getFont(FontFactory.COURIER_BOLD, 10,BaseColor.DARK_GRAY)));
        }
    //-----------------------------------------------------------------------------------------------------------------
        public void insereImagemPDF(Document document, String img) throws MalformedURLException, IOException, DocumentException {

            Image figura = Image.getInstance(img);
            	figura.scaleAbsolute(450, 300);
                document.add(figura);
            }

    //-----------------------------------------------------------------------------------------------------------------

        	public void salvaPDF(Document document) {
            document.close();
            }			
		
			
			
			public WebElement getFlag(WebDriver driver, String ngModel) {
			
				return driver.findElement(By.cssSelector("[ng-model*='" + ngModel + "']")).findElement(By.xpath(".."));
				
			}
			
			//Achar a flag com ng-Model (Achar o nome da flag)
			//depois
			//Pra acessar a flag é necessário pelo xpath (Clicar no div de cima da flag, pois há mais de uma)
			
			
			
			
				
	}
